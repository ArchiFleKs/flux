version: 2
jobs:
  build:
    working_directory: ~/go/src/github.com/weaveworks/flux
    machine: true
    environment:
      GO_VERSION: 1.12.5
      GOPATH: /home/circleci/go
      PATH: /bin:/usr/bin:/usr/local/go/bin:/home/circleci/go/bin
    steps:
      - checkout
      - run:
          name: Install Golang
          command: |
            curl -OL https://storage.googleapis.com/golang/go${GO_VERSION}.linux-amd64.tar.gz
            tar -xf go${GO_VERSION}.linux-amd64.tar.gz
            sudo rm -rf /usr/local/go
            sudo mv go /usr/local
            mkdir -p "$HOME/go/bin"
            go version
      - run:
          name: Update packages and Start Memcached
          command: |
            # These repos fail and we don't need them:
            sudo rm /etc/apt/sources.list.d/circleci_trusty.list /etc/apt/sources.list.d/google-chrome.list
            sudo apt-get update
            sudo apt-get install -y git rng-tools docker-ce memcached
            git version
            docker version
      - restore_cache:
          keys:
            - cache-{{ checksum "Makefile" }}
            - cache-
      - restore_cache:
          keys:
            - go-cache-{{ .Branch }}-{{ .Revision }}
            - go-cache-{{ .Branch }}-
            - go-cache-
      - run: 
          name: Install Dep
          command: curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
      - run: dep ensure -vendor-only
      - run: make all
      - run: make e2e
      - save_cache:
          key: cache-{{ checksum "Makefile" }}
          paths:
            - "cache"
      - save_cache:
          key: go-cache-{{ .Branch }}-{{ .Revision }}
          paths:
            - "~/.cache/go-build/"
      - deploy:
          name: Maybe push prerelease images
          command: |
            if [ -z "${CIRCLE_TAG}" -a "${CIRCLE_BRANCH}" == "master" ]; then
              echo "$DOCKER_REGISTRY_PASSWORD" | docker login --username "$DOCKER_REGISTRY_USER" --password-stdin

              docker tag "docker.io/weaveworks/flux:$(docker/image-tag)" "docker.io/weaveworks/flux-prerelease:$(docker/image-tag)"
              docker push "docker.io/weaveworks/flux-prerelease:$(docker/image-tag)"

              docker tag "docker.io/weaveworks/helm-operator:$(docker/image-tag)" "docker.io/weaveworks/helm-operator-prerelease:$(docker/image-tag)"
              docker push "docker.io/weaveworks/helm-operator-prerelease:$(docker/image-tag)"
            fi
      - deploy:
          name: Maybe push release image and upload binaries
          command: |
            if echo "${CIRCLE_TAG}" | grep -Eq "^[0-9]+(\.[0-9]+)*(-[a-z]+)?$"; then
              go get github.com/weaveworks/github-release
              make release-bins
              bin/upload-binaries
              echo "$DOCKER_REGISTRY_PASSWORD" | docker login --username "$DOCKER_REGISTRY_USER" --password-stdin
              docker push "docker.io/weaveworks/flux:${CIRCLE_TAG}"
            fi
            if echo "${CIRCLE_TAG}" | grep -Eq "helm-[0-9]+(\.[0-9]+)*(-[a-z]+)?$"; then
              echo "$DOCKER_REGISTRY_PASSWORD" | docker login --username "$DOCKER_REGISTRY_USER" --password-stdin
              RELEASE_TAG=$(echo "$CIRCLE_TAG" | cut -c 6-)
              docker push "docker.io/weaveworks/helm-operator:${RELEASE_TAG}"
            fi

workflows:
  version: 2
  build-and-push:
    jobs:
      - build:
          filters:
            tags:
              only: /(helm-)?[0-9]+(\.[0-9]+)*(-[a-z]+)?/

